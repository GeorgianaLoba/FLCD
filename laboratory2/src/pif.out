let on symbol table: (-1;-1)
func on symbol table: (-1;-1)
id on symbol table: (3;0)
( on symbol table: (-1;-1)
array on symbol table: (-1;-1)
id on symbol table: (1;0)
, on symbol table: (-1;-1)
integer on symbol table: (-1;-1)
id on symbol table: (5;0)
) on symbol table: (-1;-1)
returns on symbol table: (-1;-1)
integer on symbol table: (-1;-1)
{ on symbol table: (-1;-1)
let on symbol table: (-1;-1)
id on symbol table: (7;0)
constant on symbol table: (3;1)
; on symbol table: (-1;-1)
let on symbol table: (-1;-1)
id on symbol table: (7;1)
= on symbol table: (-1;-1)
constant on symbol table: (0;0)
; on symbol table: (-1;-1)
while on symbol table: (-1;-1)
( on symbol table: (-1;-1)
id on symbol table: (7;0)
< on symbol table: (-1;-1)
id on symbol table: (5;0)
) on symbol table: (-1;-1)
then on symbol table: (-1;-1)
{ on symbol table: (-1;-1)
id on symbol table: (7;1)
= on symbol table: (-1;-1)
id on symbol table: (7;1)
+ on symbol table: (-1;-1)
id on symbol table: (6;0)
; on symbol table: (-1;-1)
id on symbol table: (7;0)
= on symbol table: (-1;-1)
id on symbol table: (7;0)
+ on symbol table: (-1;-1)
constant on symbol table: (1;1)
; on symbol table: (-1;-1)
} on symbol table: (-1;-1)
return on symbol table: (-1;-1)
id on symbol table: (7;1)
} on symbol table: (-1;-1)
; on symbol table: (-1;-1)
